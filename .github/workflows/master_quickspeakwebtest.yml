# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - QuickSpeakWebTest

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      # NEW STEP: Add this entire block to verify .next exists after build
      - name: Verify build output
        run: |
          echo "=== Listing all files in workspace ==="
          ls -la
          echo "=== Checking .next directory ==="
          if [ -d ".next" ]; then
            ls -la .next
            du -sh .next  # Shows size of .next folder
          else
            echo ".next directory is MISSING after build!"
          fi

      # NEW: Create explicit deployment zip that includes .next
      - name: Create deployment zip (includes hidden files like .next)
        run: |
          echo "Creating zip with .next included..."
          # Zip the entire workspace, but exclude heavy/unneeded stuff to keep it fast/small
          # -r = recursive, . = current dir (includes dotfiles like .next)
          # -x excludes patterns (node_modules is huge and not needed on server)
          zip -r deploy.zip . -x "node_modules/*" -x ".git/*" -x ".github/*" -x "*.log" -x "deploy.zip"
          echo "Zip created successfully."

      # NEW: Optional verification of zip contents (confirms .next is inside)
      - name: Inspect zip contents
        run: |
          echo "Zip contents (first 100 lines, looking for .next):"
          unzip -l deploy.zip | sed -n '1,100p' | grep -i next || echo ".next not in zip? Check exclusions."

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deploy.zip  # Now upload the zip instead of the whole folder

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          # Downloads the zip to ./node-app/deploy.zip

      # NEW: Unzip the artifact to extract contents to current directory (avoids path issues)
      - name: Unzip deployment artifact
        run: |
          unzip ./node-app/deploy.zip -d .
          rm ./node-app/deploy.zip  # Clean up the zip (optional)

      # NEW: Optional verification: List extracted files (confirms .next is ready for deploy)
      - name: Verify extracted contents
        run: |
          echo "=== Extracted files ==="
          ls -la
          echo "=== .next after extraction ==="
          ls -la .next || true

      # FIXED: Deploy the extracted folder directly (package: . scans current dir for app files)
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'QuickSpeakWebTest'
          slot-name: 'Production'
          package: .  # Now deploys from current dir (extracted app files)
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CA5C60C301BB44CF9478B4E80A88A1FB }}
